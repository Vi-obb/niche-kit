{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-card-02",
  "type": "registry:block",
  "title": "Product Card 02",
  "description": "A horizontal product card with an image, title, and price.",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [
    "button",
    "dialog"
  ],
  "files": [
    {
      "path": "registry/ecomm/product-card-02/product-card-02.tsx",
      "content": "\"use client\";\n\nimport { Star, Eye } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogTrigger } from \"@/components/ui/dialog\";\nimport Image from \"next/image\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ProductCardTwoProps {\n  image?: string;\n  title?: string;\n  price?: number;\n  salePrice?: number;\n  sku?: string;\n  rating?: number;\n  onAddToCart?: () => void;\n  onQuickView?: () => void;\n  className?: string;\n}\n\n// Dummy data for the product card\nconst data = {\n  image: \"/donut.webp\",\n  title: \"Donut\",\n  price: 299.99,\n  salePrice: 149.99,\n  sku: \"WH-1000XM4\",\n  rating: 4,\n  onAddToCart: () => console.log(\"Added to cart\"),\n  onQuickView: () => console.log(\"Quick view opened\"),\n};\n\nexport function ProductCardTwo({\n  image = data.image,\n  title = data.title,\n  price = data.price,\n  salePrice = data.salePrice,\n  sku = data.sku,\n  rating = data.rating,\n  onAddToCart = data.onAddToCart,\n  onQuickView = data.onQuickView,\n  className,\n}: ProductCardTwoProps) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col md:flex-row border rounded-lg p-4 shadow-sm hover:shadow-md transition bg-background\",\n        className\n      )}\n      role=\"article\"\n      aria-labelledby={`product-${sku}`}\n    >\n      {/* Image Section */}\n      <div className=\"relative w-full md:w-1/3\">\n        <Image\n          src={image}\n          alt={title || \"Product image\"}\n          width={300}\n          height={200}\n          className=\"w-full h-48 md:h-40 object-cover rounded\"\n        />\n        {salePrice && (\n          <span className=\"absolute top-2 left-2 bg-primary text-white text-xs font-sans font-medium px-2 py-1 rounded\">\n            Sale\n          </span>\n        )}\n      </div>\n\n      {/* Details Section */}\n      <div className=\"flex-1 pl-0 md:pl-4 pt-4 md:pt-0 flex flex-col justify-between\">\n        <div>\n          <h3\n            id={`product-${sku}`}\n            className=\"text-lg font-semibold font-sans text-foreground\"\n          >\n            {title}\n          </h3>\n          <p className=\"text-sm font-mono text-muted-foreground\">SKU: {sku}</p>\n          <div className=\"flex items-center gap-2 mt-1\">\n            <span className=\"text-base font-sans text-foreground\">\n              ${salePrice ? salePrice.toFixed(2) : price.toFixed(2)}\n            </span>\n            {salePrice && (\n              <span className=\"text-sm font-sans text-muted-foreground line-through\">\n                ${price.toFixed(2)}\n              </span>\n            )}\n          </div>\n          {rating && (\n            <div className=\"flex items-center gap-1 mt-2\">\n              {[...Array(5)].map((_, i) => (\n                <Star\n                  key={i}\n                  className={`w-4 h-4 ${\n                    i < rating ? \"text-yellow-400\" : \"text-gray-300\"\n                  }`}\n                  aria-hidden=\"true\"\n                />\n              ))}\n              <span className=\"sr-only\">{rating} out of 5 stars</span>\n            </div>\n          )}\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex gap-2 mt-4\">\n          <Button\n            onClick={onAddToCart}\n            variant=\"default\"\n            size=\"sm\"\n            className=\"flex-1 font-sans\"\n            aria-label={`Add ${title} to cart`}\n          >\n            Add to Cart\n          </Button>\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button\n                onClick={onQuickView}\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"font-sans\"\n                aria-label={`Quick view of ${title}`}\n              >\n                <Eye className=\"w-4 h-4 mr-2\" />\n                Quick View\n              </Button>\n            </DialogTrigger>\n          </Dialog>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/niche-kit/product-card-02.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium cursor-pointer transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"from-primary/85 to-primary text-primary-foreground inset-shadow-2xs inset-shadow-white/25 bg-linear-to-b dark:from-primary/75 dark:bg-linear-to-t border border-zinc-950/35 shadow-md shadow-zinc-950/20 ring-0 transition-[filter] duration-200 hover:brightness-110 active:brightness-95 dark:border-0 dark:border-zinc-950/50\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline text-muted-foreground\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-full gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-full px-6 has-[>svg]:px-4\",\n        icon: \"size-9 rounded-full\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}