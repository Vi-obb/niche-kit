{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-card-01",
  "type": "registry:block",
  "title": "Product Card 01",
  "description": "A simple product card with an image, title, and price.",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/ecomm/product-card-01/product-card-01.tsx",
      "content": "\"use client\";\n\nimport Image from \"next/image\";\nimport { Heart, Plus } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\n\ninterface ProductCardOneProps {\n  name?: string;\n  price?: string;\n  imageUrl?: string;\n  isFavorite?: boolean;\n  onAddToCart?: () => void;\n  onToggleFavorite?: () => void;\n}\n\nconst data = {\n  name: \"Donut\",\n  price: \"$125\",\n  imageUrl: \"/donut.webp\",\n  isFavorite: false,\n  onAddToCart: () => console.log(\"Added to cart\"),\n  onToggleFavorite: () => console.log(\"Toggled favorite\"),\n};\n\nexport default function ProductCardOne({\n  name = data.name,\n  price = data.price,\n  imageUrl = data.imageUrl,\n  isFavorite = data.isFavorite,\n  onAddToCart = data.onAddToCart,\n  onToggleFavorite = data.onToggleFavorite,\n}: ProductCardOneProps) {\n  return (\n    <Card className=\"w-full max-w-[240px] overflow-hidden bg-muted\">\n      <div className=\"relative\">\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"absolute right-2 top-2 z-10 h-8 w-8 rounded-full p-0 backdrop-blur-sm\"\n          onClick={onToggleFavorite}\n        >\n          <Heart\n            className={`h-5 w-5 ${\n              isFavorite ? \"fill-black text-black\" : \"text-gray-500\"\n            }`}\n          />\n          <span className=\"sr-only\">Add to favorites</span>\n        </Button>\n        <div className=\"relative h-[160px] w-full\">\n          <Image\n            src={imageUrl || \"/placeholder.svg\"}\n            alt={name}\n            fill\n            className=\"object-cover\"\n            priority\n          />\n        </div>\n      </div>\n      <CardContent className=\"p-3 pb-0\">\n        <h3 className=\"text-base font-medium\">{name}</h3>\n      </CardContent>\n      <CardFooter className=\"flex items-center justify-between p-3\">\n        <p className=\"text-lg font-medium\">{price}</p>\n        <Button\n          variant=\"default\"\n          size=\"icon\"\n          className=\"h-8 w-8 rounded-md bg-black p-0\"\n          onClick={onAddToCart}\n        >\n          <Plus className=\"h-5 w-5\" />\n          <span className=\"sr-only\">Add to cart</span>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/niche-kit/product-card-01.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium cursor-pointer transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"from-primary/85 to-primary text-primary-foreground inset-shadow-2xs inset-shadow-white/25 bg-linear-to-b dark:from-primary/75 dark:bg-linear-to-t border border-zinc-950/35 shadow-md shadow-zinc-950/20 ring-0 transition-[filter] duration-200 hover:brightness-110 active:brightness-95 dark:border-0 dark:border-zinc-950/50\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline text-muted-foreground\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-full gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-full px-6 has-[>svg]:px-4\",\n        icon: \"size-9 rounded-full\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-3 rounded-lg border shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}