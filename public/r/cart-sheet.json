{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cart-sheet",
  "type": "registry:block",
  "title": "Cart Sheet",
  "description": "A cart sheet that displays the items in the cart.",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-dialog"
  ],
  "registryDependencies": [
    "button",
    "sheet"
  ],
  "files": [
    {
      "path": "registry/ecomm/cart-sheet/cart-sheet.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { X, Plus, Minus } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport Image from \"next/image\";\nimport { cn } from \"@/lib/utils\";\n\ninterface CartItem {\n  id: string;\n  image: string;\n  title: string;\n  price: number;\n  quantity: number;\n}\n\ninterface CartSheetProps {\n  className?: string;\n}\n\nexport function CartSheet({ className }: CartSheetProps) {\n  const [items, setItems] = useState<CartItem[]>([\n    {\n      id: \"1\",\n      image: \"/donut.webp\",\n      title: \"Wireless Headphones\",\n      price: 79.99,\n      quantity: 1,\n    },\n    {\n      id: \"2\",\n      image: \"/donut.webp\",\n      title: \"Bluetooth Speaker\",\n      price: 49.99,\n      quantity: 2,\n    },\n    {\n      id: \"3\",\n      image: \"/donut.webp\",\n      title: \"USB-C Cable\",\n      price: 9.99,\n      quantity: 3,\n    },\n  ]);\n\n  // Handlers\n  const handleRemove = (id: string) => {\n    setItems(items.filter((item) => item.id !== id));\n  };\n\n  const handleUpdateQuantity = (id: string, delta: number) => {\n    setItems(\n      items.map((item) =>\n        item.id === id\n          ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n          : item\n      )\n    );\n  };\n\n  // Calculate subtotal\n  const subtotal = items.reduce(\n    (sum, item) => sum + item.price * item.quantity,\n    0\n  );\n\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className={cn(\"font-sans\", className)}\n          aria-label=\"Open cart\"\n        >\n          Open cart ({items.length})\n        </Button>\n      </SheetTrigger>\n      <SheetContent\n        side=\"right\" // Slides from right on desktop\n        className=\"w-full sm:w-[400px] flex flex-col bg-background\"\n      >\n        <SheetHeader>\n          <SheetTitle className=\"text-xl font-sans text-foreground\">\n            Your Cart\n          </SheetTitle>\n        </SheetHeader>\n        <div className=\"flex-1 overflow-y-auto py-4\">\n          {items.length === 0 ? (\n            <p className=\"text-base font-sans text-muted-foreground text-center\">\n              Your cart is empty.\n            </p>\n          ) : (\n            <ul role=\"list\" className=\"space-y-4\">\n              {items.map((item) => (\n                <li\n                  key={item.id}\n                  className=\"flex gap-4 border-b pb-4\"\n                  role=\"article\"\n                  aria-labelledby={`cart-item-${item.id}`}\n                >\n                  <Image\n                    width={20}\n                    height={20}\n                    src={item.image}\n                    alt={item.title}\n                    className=\"w-20 h-20 object-cover rounded\"\n                  />\n                  <div className=\"flex-1\">\n                    <h3\n                      id={`cart-item-${item.id}`}\n                      className=\"text-base font-semibold font-sans text-foreground\"\n                    >\n                      {item.title}\n                    </h3>\n                    <p className=\"text-sm font-mono text-muted-foreground\">\n                      ${item.price.toFixed(2)} x {item.quantity}\n                    </p>\n                    <div className=\"flex items-center gap-2 mt-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleUpdateQuantity(item.id, -1)}\n                        aria-label={`Decrease quantity of ${item.title}`}\n                      >\n                        <Minus className=\"w-4 h-4\" />\n                      </Button>\n                      <span className=\"text-sm font-sans\">{item.quantity}</span>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleUpdateQuantity(item.id, 1)}\n                        aria-label={`Increase quantity of ${item.title}`}\n                      >\n                        <Plus className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => handleRemove(item.id)}\n                    aria-label={`Remove ${item.title} from cart`}\n                  >\n                    <X className=\"w-4 h-4\" />\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"border-t pt-4\">\n          <div className=\"flex justify-between mb-4\">\n            <span className=\"text-base font-sans text-foreground\">\n              Subtotal\n            </span>\n            <span className=\"text-base font-mono text-foreground\">\n              ${subtotal.toFixed(2)}\n            </span>\n          </div>\n          <Button\n            variant=\"default\"\n            size=\"lg\"\n            className=\"w-full font-sans\"\n            disabled={items.length === 0}\n            aria-label=\"Proceed to checkout\"\n          >\n            Checkout\n          </Button>\n        </div>\n      </SheetContent>\n    </Sheet>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/niche-kit/cart-sheet.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-sm font-medium cursor-pointer transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"from-primary/85 to-primary text-primary-foreground inset-shadow-2xs inset-shadow-white/25 bg-linear-to-b dark:from-primary/75 dark:bg-linear-to-t border border-zinc-950/35 shadow-md shadow-zinc-950/20 ring-0 transition-[filter] duration-200 hover:brightness-110 active:brightness-95 dark:border-0 dark:border-zinc-950/50\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline text-muted-foreground\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-full gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-full px-6 has-[>svg]:px-4\",\n        icon: \"size-9 rounded-full\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/sheet.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root data-slot=\"sheet\" {...props} />\n}\n\nfunction SheetTrigger({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />\n}\n\nfunction SheetClose({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\n  return <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />\n}\n\nfunction SheetPortal({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\n  return <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />\n}\n\nfunction SheetOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\n  return (\n    <SheetPrimitive.Overlay\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SheetContent({\n  className,\n  children,\n  side = \"right\",\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\"\n}) {\n  return (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        data-slot=\"sheet-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n          side === \"right\" &&\n            \"data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm\",\n          side === \"left\" &&\n            \"data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm\",\n          side === \"top\" &&\n            \"data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b\",\n          side === \"bottom\" &&\n            \"data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none\">\n          <XIcon className=\"size-4\" />\n          <span className=\"sr-only\">Close</span>\n        </SheetPrimitive.Close>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  )\n}\n\nfunction SheetHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-header\"\n      className={cn(\"flex flex-col gap-1.5 p-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-footer\"\n      className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Title>) {\n  return (\n    <SheetPrimitive.Title\n      data-slot=\"sheet-title\"\n      className={cn(\"text-foreground font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Description>) {\n  return (\n    <SheetPrimitive.Description\n      data-slot=\"sheet-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}